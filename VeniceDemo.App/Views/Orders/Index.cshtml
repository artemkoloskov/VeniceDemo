@model IEnumerable<VeniceDemo.App.Models.Order>

@{
    ViewData["Title"] = "Index";
}

<h1 class="display-6">Ваши заказы</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                Номер заказа
            </th>
            <th>
                Дата заказа
            </th>
            <th>
                Общая стоимость
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateCreated)
                </td>
                <td>
                    @item.TotalCost руб.
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">Детали заказа</a>
                </td>
            </tr>
        }
        <tr>
            <td>
                Всего заказов на сумму
            </td>
            <td>
            </td>
            <td>
                @ViewBag.TotalOrdersCost руб.
            </td>
            <td>
            </td>
        </tr>
    </tbody>
</table>

<h1 class="display-6">Ваши платежи</h1>

<p>
    <a asp-action="Create">Создать новый платеж</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Номер платежа
            </th>
            <th>
                Дата платежа
            </th>
            <th>
                Сумма платежа
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var payment in (List<Payment>)ViewBag.CustomerPayments)
        {
            <tr>
                <td>
                    @payment.Id
                </td>
                <td>
                    @payment.DateCreated
                </td>
                <td>
                    @payment.Amount руб.
                </td>
                <td>
                    <a asp-controller="Payments" asp-action="Details" asp-route-id="@payment.Id">Детали платежа</a>
                </td>
            </tr>
        }
        <tr>
            <td>
                Всего оплачено
            </td>
            <td>
            </td>
            <td>
                @ViewBag.TotalAmountPaid руб.
            </td>
            <td>
                @if ((double)ViewBag.TotalOrdersCost - (double)ViewBag.TotalAmountPaid > 0)
                {
                    <p>Долг: @((double)ViewBag.TotalOrdersCost - (double)ViewBag.TotalAmountPaid) руб.</p>
                }
            </td>
        </tr>
    </tbody>
</table>

<h1 class="display-6">Свод по неделям</h1>
<table class="table">
    <thead>
        <tr>
            <th>
                Номер недели
            </th>
            <th>
                Заказов на сумму
            </th>
            <th>
                Оплачено, сумма
            </th>
            <th>
                Долг на конец недели
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var week in ((Dictionary<string, (double ordered, double paid, double delta)>)ViewBag.WeeklyData))
        {
            <tr>
                <td>
                    @week.Key
                </td>
                <td>
                    @week.Value.ordered руб.
                </td>
                <td>
                    @week.Value.paid руб.
                </td>
                <td>
                    @week.Value.delta руб.
                </td>
            </tr>
        }
        <tr>
            <td>
                Итого
            </td>
            <td>
                @ViewBag.TotalOrdersCost руб.
            </td>
            <td>
                @ViewBag.TotalAmountPaid руб.
            </td>
            <td>
                @if ((double)ViewBag.TotalOrdersCost - (double)ViewBag.TotalAmountPaid > 0)
                {
                    <p>Долг: @((double)ViewBag.TotalOrdersCost - (double)ViewBag.TotalAmountPaid) руб.</p>
                }
            </td>
        </tr>
    </tbody>
</table>

